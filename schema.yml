openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/basket/:
    get:
      operationId: basket_retrieve
      tags:
      - basket
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: basket_create
      tags:
      - basket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: basket_destroy
      tags:
      - basket
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/confirm-email/{key}/:
    get:
      operationId: confirm_email_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - confirm-email
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmEmailToken'
          description: ''
  /api/contacts/:
    post:
      operationId: contacts_create
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/contacts/{id}/:
    get:
      operationId: contacts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: contacts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/order/confirm/:
    post:
      operationId: order_confirm_create
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/:
    get:
      operationId: orders_list
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/status/:
    put:
      operationId: orders_status_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/products/:
    get:
      operationId: products_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quantity
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукт.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/protected-view/:
    get:
      operationId: protected_view_retrieve
      tags:
      - protected-view
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    ConfirmEmailToken:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Пользователь
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания токена
        key:
          type: string
          readOnly: true
          title: Ключ
      required:
      - created_at
      - id
      - key
      - user
    Contact:
      type: object
      properties:
        first_name:
          type: string
          title: Имя
          maxLength: 100
        last_name:
          type: string
          title: Фамилия
          maxLength: 100
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        phone:
          type: string
          title: Телефон
          maxLength: 20
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 100
        house:
          type: string
          title: Дом
          maxLength: 15
        structure:
          type: string
          title: Корпус
          maxLength: 15
        building:
          type: string
          title: Строение
          maxLength: 15
        apartment:
          type: string
          title: Квартира
          maxLength: 15
      required:
      - city
      - phone
      - street
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          title: Пароль
      required:
      - email
      - password
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        contact:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Статус
      required:
      - contact
      - id
      - items
      - state
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_name:
          type: string
          readOnly: true
        shop:
          type: string
          readOnly: true
        price:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        total:
          type: integer
          readOnly: true
      required:
      - id
      - price
      - product_name
      - quantity
      - shop
      - total
    PatchedContact:
      type: object
      properties:
        first_name:
          type: string
          title: Имя
          maxLength: 100
        last_name:
          type: string
          title: Фамилия
          maxLength: 100
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        phone:
          type: string
          title: Телефон
          maxLength: 20
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 100
        house:
          type: string
          title: Дом
          maxLength: 15
        structure:
          type: string
          title: Корпус
          maxLength: 15
        building:
          type: string
          title: Строение
          maxLength: 15
        apartment:
          type: string
          title: Квартира
          maxLength: 15
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        contact:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Статус
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 80
        shop:
          type: string
          nullable: true
          readOnly: true
        price:
          type: integer
          nullable: true
          readOnly: true
        quantity:
          type: integer
          nullable: true
          readOnly: true
        model:
          type: string
          nullable: true
          readOnly: true
        characteristics:
          type: object
          additionalProperties:
            type: string
          readOnly: true
      required:
      - characteristics
      - id
      - model
      - name
      - price
      - quantity
      - shop
    Registration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        password:
          type: string
          writeOnly: true
          title: Пароль
      required:
      - email
      - id
      - password
    StateEnum:
      enum:
      - basket
      - new
      - confirmed
      - assembled
      - sent
      - delivered
      - canceled
      type: string
      description: |-
        * `basket` - Статус корзины
        * `new` - Новый
        * `confirmed` - Подтвержден
        * `assembled` - Собран
        * `sent` - Отправлен
        * `delivered` - Доставлен
        * `canceled` - Отменен
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. 150 символов или меньше. Разрешены буквы,
            цифры и @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - email
      - id
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
