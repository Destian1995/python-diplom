"""
Django settings for orders project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from sentry_sdk.integrations.celery import CeleryIntegration
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

AUTH_USER_MODEL = 'backend.User'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

AUTHENTICATION_BACKENDS = (
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4ku@dm!m@3o5(^l42hk$b$kw9o0%g(cf=j+lv%6_8q=80a*)=e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'netology.local',
    '172.20.43.254',
    'localhost',
    '127.0.0.1'
]

SITE_URL = 'https://172.20.43.254:8000'
# Application definition
# Redis в качестве брокера для Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'
# Бэкэнд для хранения состояния задач (можно заменить на PostgreSQL)
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# Таймаут задачи
CELERY_TASK_TIME_LIMIT = 30

SITE_ID = 1
TEST_RUNNER = "django.test.runner.DiscoverRunner"

INSTALLED_APPS = [
    'baton',
    'baton.autodiscover',
    'django_extensions',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'backend',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.vk',
    'versatileimagefield',
]

# Форматы миниатюр
VERSATILEIMAGEFIELD_RENDITION_KEY_SETS = {
    'image_versions': [
        ('small_square', 'crop__100x100'),
        ('medium', 'thumbnail__300x300'),
        ('large', 'thumbnail__800x800'),
    ],
}

SOCIAL_AUTH_VK_OAUTH2_KEY = '53221865'  # ID приложения
SOCIAL_AUTH_VK_OAUTH2_SECRET = 'VCnc8UtxEKsoyqMrftF3'  # Защищённый ключ

LOGIN_REDIRECT_URL = '/api/'  # Перенаправление после успешной авторизации

# Безопасность для HTTPS
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
CSRF_TRUSTED_ORIGINS = ['https://172.20.43.254:8000']
SECURE_SSL_REDIRECT = True

# Для корректной работы соцсетей
SOCIAL_AUTH_REDIRECT_IS_HTTPS = True

ROLLBAR = {
    'access_token': '455547f7df7b4ce99706381dbb3d39db',
    'environment': 'development',
    'branch': 'main',
    'root': '/home/vagrant/python-diplom',
}

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework.authentication.TokenAuthentication'],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'user': '6/minute',  # 6 запросов в минуту
        'anon': '6/minute',  # 6 запросов в минуту для анонимных пользователей
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 465  # Порт для SSL
EMAIL_USE_SSL = True  # Использование SSL
EMAIL_HOST_USER = 'Lerdonia@mail.ru'  # Ваш email
EMAIL_HOST_PASSWORD = 'pajcJt8BtE99jVhd1Lpa'  # Ваш пароль
SERVER_EMAIL = EMAIL_HOST_USER
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # От кого будут приходить письма


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'rollbar.contrib.django.middleware.RollbarNotifierMiddleware',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'rollbar': {
            'level': 'ERROR',
            'class': 'rollbar.logger.RollbarHandler',
            'access_token': ROLLBAR['access_token'],
            'environment': ROLLBAR['environment'],
        },
    },
    'loggers': {
        'django': {
            'handlers': ['rollbar'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

ROOT_URLCONF = 'orders.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'backend/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'orders.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'diplom',
        'USER': 'netology',
        'PASSWORD': 'netology1',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
